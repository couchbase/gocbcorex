// Code generated by ogen, DO NOT EDIT.

package cbnsapi

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// GetBucket implements GetBucket operation.
	//
	// GET /pools/default/buckets/{bucketName}
	GetBucket(ctx context.Context, params GetBucketParams) (*BucketInfo, error)
	// GetBucketTerse implements GetBucketTerse operation.
	//
	// GET /pools/default/b/{bucketName}
	GetBucketTerse(ctx context.Context, params GetBucketTerseParams) (*TerseBucketInfo, error)
	// GetBuckets implements GetBuckets operation.
	//
	// GET /pools/default/buckets
	GetBuckets(ctx context.Context) (BucketsInfo, error)
	// GetDefaultPool implements GetDefaultPool operation.
	//
	// GET /pools/default
	GetDefaultPool(ctx context.Context) (*PoolInfo, error)
	// GetNodeServices implements GetNodeServices operation.
	//
	// GET /pools/default/nodeServices
	GetNodeServices(ctx context.Context) (*NodeServices, error)
	// GetPools implements GetPools operation.
	//
	// GET /pools
	GetPools(ctx context.Context) (*PoolsInfo, error)
	// StreamBucketTerse implements StreamBucketTerse operation.
	//
	// GET /pools/default/bs/{bucketName}
	StreamBucketTerse(ctx context.Context, params StreamBucketTerseParams) (*TerseBucketInfo, error)
	// StreamDefaultPool implements StreamDefaultPool operation.
	//
	// GET /poolsStreaming/default
	StreamDefaultPool(ctx context.Context) (*PoolInfo, error)
	// StreamNodeServices implements StreamNodeServices operation.
	//
	// GET /pools/default/nodeServicesStreaming
	StreamNodeServices(ctx context.Context) (*NodeServices, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	sec SecurityHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, sec SecurityHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		sec:        sec,
		baseServer: s,
	}, nil
}
